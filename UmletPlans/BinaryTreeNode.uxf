<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>7</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>518</x>
      <y>49</y>
      <w>252</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>BinaryTreeNode&lt;Type&gt;
--
- root : BinaryTreeNode&lt;Type&gt; *
- left : BinaryTreeNode&lt;Type&gt; *
- right : BinaryTreeNode&lt;Type&gt; *
--
+ BinaryTreeNode() : constructor
+ BinaryTreeNode(Type data) : constructor

+ getRootNode() : BinaryTreeNode&lt;Type&gt; *
+ getLeftNode() : BinaryTreeNode&lt;Type&gt; *
+ getRightNode() : BinaryTreeNode&lt;Type&gt; *

+ setRootNode(BinaryTreeNode&lt;Type&gt; * root) : void
+ setLeftNode(BinaryTreeNode&lt;Type&gt; * left) : void
+ setRightNode(BinaryTreeNode&lt;Type&gt; * right) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>147</x>
      <y>175</y>
      <w>252</w>
      <h>203</h>
    </coordinates>
    <panel_attributes>Tree&lt;Type&gt;
--
# root : BinaryTreeNode&lt;Type&gt;
--
*Informational Methods*
+ getSize() : int
+ getHeight() : int
+ isComplete() : bool
+ isBalanced() : bool
*Data Methods*
+ insert(Type) : void
+ contains(Type) : bool
+ remove(Type) : void

*Traversals*
+ inOrderTraversal() : void
+ preOrderTraversal() : void
+ postOrderTraversal() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>399</x>
      <y>133</y>
      <w>126</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>Extends
lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;20.0;160.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>147</x>
      <y>49</y>
      <w>252</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>Node&lt;Type&gt;
--
#data : Type
--
+Node() : constructor
+Node(Type data) : constructor
+getData() : Type
+setData(Type data) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>399</x>
      <y>217</y>
      <w>420</w>
      <h>357</h>
    </coordinates>
    <panel_attributes>BinarySearchTree&lt;Type&gt;
--
*Structure*
+ BinarySearchTree() : Constructor
+ ~BinarySearchTree() : Destructor

*Informational Methods*
+ getSize() : int
+ getHeight() : int
+ isComplete() : bool
+ isBalanced() : bool
*Recursive Information Helpers*
# calculateSize(BinaryTreeNode&lt;Type&gt; * startNode) : int
# calculateHeight(BinaryTreeNodde&lt;Type&gt; * startNode) : int
# isBalanced(BinaryTreeNode&lt;Type&gt; * startNode) : bool
# isComplete(BinaryTreeNode&lt;Type&gt; * startNode, int index, int size) : bool
*Data Methods*
+ insert(Type) : void
+ contains(Type) : bool
+ remove(Type) : void
*Recursive Data Helpers*
# removeNode(BinaryTreeNode&lt;Type&gt; * removeMe) : void
*Traversals*
+ inOrderTraversal() : void
+ preOrderTraversal() : void
+ postOrderTraversal() : void
*Recursive Traversal Helpers*
# inOrderTraversal(BinaryTreeNode&lt;Type&gt; * inStart) : void
# preOrderTraversal(BinaryTreeNode&lt;Type&gt; * preStart) : void
# postOrderTraversal(BinaryTreeNode&lt;Type&gt; * postStart) : void
# getRightMostChild(BinaryTreeNode&lt;Type&gt; * current) : BinaryTreeNode&lt;Type&gt; *
# getLeftMostChild(BinaryTreeNode&lt;Type&gt; * current) : BinaryTreeNode&lt;Type&gt; *</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
